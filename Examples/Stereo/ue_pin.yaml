%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "KannalaBrandt8"
#Camera.type: "PinHole"
#960*540 第一次实验。ue默认设置焦距15，视角固定采集数据，没控制变量
#Camera.fx: 282.4369286609106
#Camera.fy: 282.4255862629835
#Camera.cx: 479.53969318222
#Camera.cy: 269.48207436772026
#Camera.k1: 0.3244977370661135
#Camera.k2: 0.16589627481885358
#Camera.k3: -0.013237704412499381
#Camera.k4: 0.07536485148444078
#Camera2.fx: 282.4369286609106
#Camera2.fy: 282.4255862629835
#Camera2.cx: 479.53969318222
#Camera2.cy: 269.48207436772026
#Camera2.k1: 0.3244977370661135
#Camera2.k2: 0.16589627481885358
#Camera2.k3: -0.013237704412499381
#Camera2.k4: 0.07536485148444078

# ue_pin文件夹，用更大的fov，固定fov，更改夹角theta
# # fx、fy=960/23.76*7=282.8282828。cx=960/2,cy=540/2
#Camera.fx: 282.8282828
#Camera.fy: 282.8282828
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33123887892876225
#Camera.k2: 0.15310495026770257
#Camera.k3: -0.00044383114715550805
#Camera.k4: 0.07359668343403605
#Camera2.fx: 282.8282828
#Camera2.fy: 282.8282828
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33123887892876225
#Camera2.k2: 0.15310495026770257
#Camera2.k3: -0.00044383114715550805
#Camera2.k4: 0.07359668343403605

#第一组实验，控制变量，共视区域角度phi不变，通过修改FOV来修改总视野S
# 通过测试知道了真实值计算方法，以FOV=80为例：图片大小960*540，胶片背板大小(16:9)为23.76*13.365，设置的焦距为14.15，则fx、fy=960/23.76*14.15。cx=960/2,cy=540/2
# 但是使用这个真实值得到的slam结果很差，发现问题是不能用kb模型，kb模型的四个畸变参数不是0，用pinhole-radtan，见ue_pin_2.yaml
##FOV=60 标定
#Camera.fx: 842.1455177894156
#Camera.fy: 840.3701038910048
#Camera.cx: 473.93184537724056
#Camera.cy: 259.87111941017645
#Camera.k1: 0.23136044134099126
#Camera.k2: 1.195304417661223
#Camera.k3: -4.568926954015084
#Camera.k4: 6.936732646435211
#Camera2.fx: 842.1455177894156
#Camera2.fy: 840.3701038910048
#Camera2.cx: 473.93184537724056
#Camera2.cy: 259.87111941017645
#Camera2.k1: 0.23136044134099126
#Camera2.k2: 1.195304417661223
#Camera2.k3: -4.568926954015084
#Camera2.k4: 6.936732646435211
## 真实值 使用radtan模型真实值转换
#Camera.fx: 828.2828282828283
#Camera.fy: 828.2828282828283
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33281976859392076
#Camera.k2: 0.13960932573057316
#Camera.k3: 0.03989596473635706
#Camera.k4: 0.01052675486171711
#Camera2.fx: 828.2828282828283
#Camera2.fy: 828.2828282828283
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33281976859392076
#Camera2.k2: 0.13960932573057316
#Camera2.k3: 0.03989596473635706
#Camera2.k4: 0.01052675486171711

##FOV=70
#Camera.fx: 684.5102792972211
#Camera.fy: 684.4289119798227
#Camera.cx: 479.6594456650009
#Camera.cy: 269.17183485171375
#Camera.k1: 0.3193842806898702
#Camera.k2: 0.24373879752429736
#Camera.k3: -0.3303830163213694
#Camera.k4: 0.4590818450074104
#Camera2.fx: 684.5102792972211
#Camera2.fy: 684.4289119798227
#Camera2.cx: 479.6594456650009
#Camera2.cy: 269.17183485171375
#Camera2.k1: 0.3193842806898702
#Camera2.k2: 0.24373879752429736
#Camera2.k3: -0.3303830163213694
#Camera2.k4: 0.4590818450074104
## 真实值 使用radtan模型真实值转换
#Camera.fx: 684.8484848484848
#Camera.fy: 684.8484848484848
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33326978589738815
#Camera.k2: 0.13357567265442208
#Camera.k3: 0.05504092158690694
#Camera.k4: 0.02153528048257481
#Camera2.fx: 684.8484848484848
#Camera2.fy: 684.8484848484848
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33326978589738815
#Camera2.k2: 0.13357567265442208
#Camera2.k3: 0.05504092158690694
#Camera2.k4: 0.02153528048257481

#0#FOV=80
#Camera.fx: 571.5639765507864
#Camera.fy: 571.4691315977727
#Camera.cx: 479.5726668203114
#Camera.cy: 269.26163559568676
#Camera.k1: 0.3224234970336173
#Camera.k2: 0.196436316079117
#Camera.k3: -0.10882162249613855
#Camera.k4: 0.15587007338658052
#Camera2.fx: 571.5639765507864
#Camera2.fy: 571.4691315977727
#Camera2.cx: 479.5726668203114
#Camera2.cy: 269.26163559568676
#Camera2.k1: 0.3224234970336173
#Camera2.k2: 0.196436316079117
#Camera2.k3: -0.10882162249613855
#Camera2.k4: 0.15587007338658052
# 真实值 FOV=80 使用radtan模型真实值转换
#Camera.fx: 571.717171
#Camera.fy: 571.717171
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.3334579587781099
#Camera.k2: 0.1319395947891031
#Camera.k3: 0.057033435272558886
#Camera.k4: 0.02544940284112337
#Camera2.fx: 571.717171
#Camera2.fy: 571.717171
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.3334579587781099
#Camera2.k2: 0.1319395947891031
#Camera2.k3: 0.05703343527255888
#Camera2.k4: 0.02544940284112337

# 真实值 FOV=85 使用radtan模型真实值转换
# fx、fy=960/23.76*12.96=523.63636363。cx=960/2,cy=540/2
#Camera.fx: 523.636363636
#Camera.fy: 523.636363636
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33354017280716475
#Camera.k2: 0.13135613883423694
#Camera.k3: 0.05747478696206408
#Camera.k4: 0.026733226273574415
#Camera2.fx: 523.636363636
#Camera2.fy: 523.636363636
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33354017280716475
#Camera2.k2: 0.13135613883423694
#Camera2.k3: 0.05747478696206408
#Camera2.k4: 0.026733226273574415

##FOV=90
#Camera.fx: 479.6258359814887
#Camera.fy: 479.5029845802374
#Camera.cx: 479.5176331866202
#Camera.cy: 269.33304825799627
#Camera.k1: 0.31746872260486353
#Camera.k2: 0.222173820557721
#Camera.k3: -0.14948235978732774
#Camera.k4: 0.1754668794339438
#Camera2.fx: 479.6258359814887
#Camera2.fy: 479.5029845802374
#Camera2.cx: 479.5176331866202
#Camera2.cy: 269.33304825799627
#Camera2.k1: 0.31746872260486353
#Camera2.k2: 0.222173820557721
#Camera2.k3: -0.14948235978732774
#Camera2.k4: 0.1754668794339438
# 真实值 FOV=90 使用radtan模型真实值转换
#Camera.fx: 479.5959596
#Camera.fy: 479.5959596
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33365182803067356
#Camera.k2: 0.13063104312949045
#Camera.k3: 0.05800230990598857
#Camera.k4: 0.027966740336449827
#Camera2.fx: 479.5959596
#Camera2.fy: 479.5959596
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33365182803067356
#Camera2.k2: 0.13063104312949045
#Camera2.k3: 0.05800230990598857
#Camera2.k4: 0.027966740336449827

# 真实值 FOV=95 使用radtan模型真实值转换
# fx、fy=960/23.76*10.88=439.595955959。cx=960/2,cy=540/2
#Camera.fx: 439.5959559596
#Camera.fy: 439.5959559596
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.3331097971956228
#Camera.k2: 0.13663482426105178
#Camera.k3: 0.039430031198668045
#Camera.k4: 0.045061907498003755
#Camera2.fx: 439.5959559596
#Camera2.fy: 439.5959559596
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.3331097971956228
#Camera2.k2: 0.13663482426105178
#Camera2.k3: 0.039430031198668045
#Camera2.k4: 0.045061907498003755

##FOV=100
#Camera.fx: 401.1756003839754
#Camera.fy: 401.1171469328311
#Camera.cx: 479.42114436715775
#Camera.cy: 269.26863648786565
#Camera.k1: 0.32373651520920366
#Camera.k2: 0.1646380052270938
#Camera.k3: -0.008161721407868305
#Camera.k4: 0.06656925362265774
#Camera2.fx: 401.1756003839754
#Camera2.fy: 401.1171469328311
#Camera2.cx: 479.42114436715775
#Camera2.cy: 269.26863648786565
#Camera2.k1: 0.32373651520920366
#Camera2.k2: 0.1646380052270938
#Camera2.k3: -0.008161721407868305
#Camera2.k4: 0.06656925362265774
# 真实值 FOV=100 使用radtan模型真实值转换
Camera.fx: 402.424242
Camera.fy: 402.424242
Camera.cx: 480.0
Camera.cy: 270.0
Camera.k1: 0.33297239702335685
Camera.k2: 0.13817759352569395
Camera.k3: 0.03474475189790228
Camera.k4: 0.04920910763841748
Camera2.fx: 402.424242
Camera2.fy: 402.424242
Camera2.cx: 480.0
Camera2.cy: 270.0
Camera2.k1: 0.33297239702335685
Camera2.k2: 0.13817759352569395
Camera2.k3: 0.03474475189790228
Camera2.k4: 0.04920910763841748

# 真实值 FOV=105 使用radtan模型真实值转换
# fx、fy=960/23.76*9.11=368.080808。cx=960/2,cy=540/2
#Camera.fx: 368.08080808081
#Camera.fy: 368.08080808081
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33275934964400666
#Camera.k2: 0.14032252456674088
#Camera.k3: 0.028851092228065502
#Camera.k4: 0.05394403162640681
#Camera2.fx: 368.08080808081
#Camera2.fy: 368.08080808081
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33275934964400666
#Camera2.k2: 0.14032252456674088
#Camera2.k3: 0.028851092228065502
#Camera2.k4: 0.05394403162640681

##FOV=110
#Camera.fx: 335.4755186843635
#Camera.fy: 335.40704370632193
#Camera.cx: 479.4992666657689
#Camera.cy: 269.5454731134571
#Camera.k1: 0.31523206552129146
#Camera.k2: 0.20474719526815632
#Camera.k3: -0.07426690373699611
#Camera.k4: 0.10571376292244501
#Camera2.fx: 335.4755186843635
#Camera2.fy: 335.40704370632193
#Camera2.cx: 479.4992666657689
#Camera2.cy: 269.5454731134571
#Camera2.k1: 0.31523206552129146
#Camera2.k2: 0.20474719526815632
#Camera2.k3: -0.07426690373699611
#Camera2.k4: 0.10571376292244501
# 真实值 FOV=110 使用radtan模型真实值转换
#Camera.fx: 335.75757575758
#Camera.fy: 335.75757575758
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.3324219192800569
#Camera.k2: 0.1434711886378891
#Camera.k3: 0.020902051835154443
#Camera.k4: 0.059787099981423716
#Camera2.fx: 335.75757575758
#Camera2.fy: 335.75757575758
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.3324219192800569
#Camera2.k2: 0.1434711886378891
#Camera2.k3: 0.020902051835154443
#Camera2.k4: 0.059787099981423716

# 真实值 FOV=115 使用radtan模型真实值转换
# fx、fy=960/23.76*7.56=305.454545。cx=960/2,cy=540/2
#Camera.fx: 305.45454545454545
#Camera.fy: 305.45454545454545
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.33187673741673446
#Camera.k2: 0.14806512046413084
#Camera.k3: 0.01035332521670772
#Camera.k4: 0.06686049024483341
#Camera2.fx: 305.45454545454545
#Camera2.fy: 305.45454545454545
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.33187673741673446
#Camera2.k2: 0.14806512046413084
#Camera2.k3: 0.01035332521670772
#Camera2.k4: 0.06686049024483341

##FOV=120
#Camera.fx: 276.8600288577513
#Camera.fy: 276.873483984777
#Camera.cx: 479.6363361756541
#Camera.cy: 269.5099851720279
#Camera.k1: 0.3230638951076347
#Camera.k2: 0.18070075652609668
#Camera.k3: -0.0562001371050458
#Camera.k4: 0.1078899292518603
#Camera2.fx: 276.8600288577513
#Camera2.fy: 276.873483984777
#Camera2.cx: 479.6363361756541
#Camera2.cy: 269.5099851720279
#Camera2.k1: 0.3230638951076347
#Camera2.k2: 0.18070075652609668
#Camera2.k3: -0.0562001371050458
#Camera2.k4: 0.1078899292518603
# 真实值 FOV=120 使用radtan模型真实值转换
#Camera.fx: 276.767676768
#Camera.fy: 276.767676768
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.3310187184417369
#Camera.k2: 0.1547337612380027
#Camera.k3: -0.0037473423861567115
#Camera.k4: 0.07555809740473861
#Camera2.fx: 276.767676768
#Camera2.fy: 276.767676768
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.3310187184417369
#Camera2.k2: 0.1547337612380027
#Camera2.k3: -0.00374734238615671
#Camera2.k4: 0.07555809740473861

# 真实值 FOV=125 使用radtan模型真实值转换
# fx、fy=960/23.76*6.18=249.69696969。cx=960/2,cy=540/2
#Camera.fx: 249.69696969697
#Camera.fy: 249.69696969697
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.32973706343339565
#Camera.k2: 0.16406190892533476
#Camera.k3: -0.022115934093423707
#Camera.k4: 0.0860752590389781
#Camera2.fx: 249.69696969697
#Camera2.fy: 249.69696969697
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.32973706343339565
#Camera2.k2: 0.16406190892533476
#Camera2.k3: -0.022115934093423707
#Camera2.k4: 0.0860752590389781

# 真实值 FOV=130 使用radtan模型真实值转换
#Camera.fx: 223.43434343
#Camera.fy: 223.43434343
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.32770463430913477
#Camera.k2: 0.1777739885198773
#Camera.k3: -0.047139190474194646
#Camera.k4: 0.09934712587536533
#Camera2.fx: 223.43434343
#Camera2.fy: 223.43434343
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.32770463430913477
#Camera2.k2: 0.1777739885198773
#Camera2.k3: -0.047139190474194646
#Camera2.k4: 0.09934712587536533

# 真实值 FOV=135 使用radtan模型真实值转换
# fx、fy=960/23.76*4.92=198.78787878。cx=960/2,cy=540/2
#Camera.fx: 198.78787878788
#Camera.fy: 198.78787878788
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.32451890540800454
#Camera.k2: 0.19782872286736272
#Camera.k3: -0.08124783329521482
#Camera.k4: 0.1161897202547352
#Camera2.fx: 198.78787878788
#Camera2.fy: 198.78787878788
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.32451890540800454
#Camera2.k2: 0.19782872286736272
#Camera2.k3: -0.08124783329521482
#Camera2.k4: 0.1161897202547352

# 真实值 FOV=140 使用radtan模型真实值转换
#Camera.fx: 174.545454545
#Camera.fy: 174.545454545
#Camera.cx: 480.0
#Camera.cy: 270.0
#Camera.k1: 0.31949194605227393
#Camera.k2: 0.22747750338100126
#Camera.k3: -0.1284254652801168
#Camera.k4: 0.13795928789134673
#Camera2.fx: 174.545454545
#Camera2.fy: 174.545454545
#Camera2.cx: 480.0
#Camera2.cy: 270.0
#Camera2.k1: 0.31949194605227393
#Camera2.k2: 0.22747750338100126
#Camera2.k3: -0.12842546528011686
#Camera2.k4: 0.13795928789134673

# Transformation matrix from right camera to left camera /media/hl/Stuff/ubuntu_share_2/Dataset/ue_180/calib/get_t.py
Tlr: !!opencv-matrix
  rows: 3
  cols: 4
  dt: f

#  # 0
  data: [ 1.0, 0.0, 0.0, 0.2,
          0.0, 1.0, 0.0, 0.0,
          0.0, 0.0, 1.0, 0.0]

  # 5
  #  # 计算真实值
#  data: [ 0.98480775, 0.0,  0.17364818,  0.19923894,
#          0.0,  1.0,  0.0,  0.0,
#          -0.17364818, 0.0,  0.98480775, -0.01743115 ]

# 7.5
#  # 计算真实值
#  data: [ 0.96592583, 0.0,  0.25881905,  0.19828897,
#          0.0,  1.0,  0.0,  0.0,
#          -0.25881905, 0.0,  0.96592583, -0.02610524]

   # 10  标定双目 逆矩阵 可用
#  data: [ 9.39783305e-01, -2.62070597e-04,  3.41770788e-01,  1.98505470e-01,
#          6.95988844e-05,  9.99999832e-01,  5.75422742e-04,  4.25771688e-05,
#          -3.41770881e-01, -5.16985820e-04,  9.39783165e-01, -2.36744195e-02 ]
# # 计算真实值
#  data: [ 0.93969262, 0.0,  0.34202014,  0.1969615506,
#          0.0,  1.0,  0.0,  0.0,
#          -0.34202014, 0.0,  0.93969262, -0.0347296 ]
 # 扩大1.1
#  data: [ 0.93969262, 0.0,  0.34202014,  0.216658,
#          0.0,  1.0,  0.0,  0.0,
#          -0.34202014, 0.0,  0.93969262, -0.038203 ]

# 12.5
#  # 计算真实值
#  data: [ 0.90630779, 0.0,  0.42261826,  0.1952592,
#          0.0,  1.0,  0.0,  0.0,
#          -0.42261826, 0.0,  0.90630779, -0.04328792]

# 15
#  # 计算真实值
#  data: [ 0.8660254, 0.0,  0.5,  0.19318517,
#          0.0,  1.0,  0.0,  0.0,
#          -0.5, 0.0,  0.8660254, -0.05176381]

# 17.5
#  # 计算真实值
#  data: [ 0.81915204, 0.0,  0.57357644,  0.19074339,
#          0.0,  1.0,  0.0,  0.0,
#          -0.57357644, 0.0,  0.81915204, -0.06014116]

#  # 20  标定双目 逆矩阵 可用
#  data: [ 7.66053177e-01, -1.03705656e-03,  6.42776364e-01,  1.95751178e-01,
#          9.23732142e-05,  9.99998866e-01,  1.50331071e-03,  8.32315802e-04,
#          -6.42777194e-01, -1.09224063e-03,  7.66052404e-01, -4.77782830e-02 ]
# # 计算真实值
#  data: [ 0.76604444, 0.0,  0.64278761,  0.18794,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  0.76604444, -0.0684 ]
# 20 b=40
#  data: [ 0.76604444, 0.0,  0.64278761,  0.37588,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  0.76604444, -0.1368 ]
# 20 b=60
#  data: [ 0.76604444, 0.0,  0.64278761,  0.56382,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  0.76604444, -0.2052 ]

# 22.5
#  # 计算真实值
#  data: [ 0.70710678, 0.0,  0.70710678,  0.18477591,
#          0.0,  1.0,  0.0,  0.0,
#          -0.70710678, 0.0,  0.70710678, -0.07653669]

# 25
  # 计算真实值
#  data: [ 0.64278761, 0.0,  0.76604444,  0.18126156,
#          0.0,  1.0,  0.0,  0.0,
#          -0.76604444, 0.0,  0.64278761, -0.08452365]

# 27.5
#  # 计算真实值
#  data: [ 0.57357644, 0.0,  0.81915204,  0.17740217,
#          0.0,  1.0,  0.0,  0.0,
#          -0.81915204, 0.0,  0.57357644, -0.09234972]

#  # 30  标定双目 逆矩阵
#  data: [ 5.00969280e-01, -1.54670197e-03,  8.65463684e-01,  1.89477633e-01,
#          1.31448056e-05,  9.99998417e-01,  1.77952513e-03,  9.79052081e-04,
#          -8.65465066e-01, -8.80111073e-04,  5.00968507e-01, -7.26362658e-02 ]
#  # 计算真实值
#  data: [ 0.5, 0.0,  0.8660254,  0.1732,
#          0.0,  1.0,  0.0,  0.0,
#          -0.8660254, 0.0,  0.5, -0.1 ]
#  30 b=40
#  data: [ 0.5, 0.0,  0.8660254,  0.3464,
#          0.0,  1.0,  0.0,  0.0,
#          -0.8660254, 0.0,  0.5, -0.2 ]
#  30 b=60
#  data: [ 0.5, 0.0,  0.8660254,  0.5196,
#          0.0,  1.0,  0.0,  0.0,
#          -0.8660254, 0.0,  0.5, -0.3 ]

# 32.5
#  # 计算真实值
#  data: [ 0.42261826, 0.0,  0.90630779,  0.16867829,
#          0.0,  1.0,  0.0,  0.0,
#          -0.90630779, 0.0,  0.42261826, -0.10745992]

# 35
#  # 计算真实值
#  data: [ 0.34202014, 0.0,  0.93969262,  0.16383041,
#          0.0,  1.0,  0.0,  0.0,
#          -0.93969262, 0.0,  0.34202014, -0.11471529]

  # 40  标定双目 逆矩阵 可用
#  data: [ 1.75081543e-01, -1.84598774e-03,  9.84552206e-01,  1.80984402e-01,
#          4.78255417e-05,  9.99998257e-01,  1.86644359e-03,  8.05397351e-04,
#          -9.84553935e-01, -2.79693082e-04,  1.75081326e-01, -9.50821838e-02]
#  # 计算真实值
#  data: [ 0.17364818, 0.0,  0.98480775,  0.1532,
#          0.0,  1.0,  0.0,  0.0,
#          -0.98480775, 0.0,  0.17364818, -0.1286 ]
  # by 1.2
#  data: [ 0.17364818, 0.0,  0.98480775,  0.18384,
#          0.0,  1.0,  0.0,  0.0,
#          -0.98480775, 0.0,  0.17364818, -0.15432 ]

# 50
#  # 计算真实值
#  data: [ -0.17364818, 0.0,  0.98480775,  0.1286,
#          0.0,  1.0,  0.0,  0.0,
#          -0.98480775, 0.0,  -0.17364818, -0.1532 ]

# 60
# # 标定
#  data: [ -5.08303790e-01, -8.56455787e-04,  8.61177405e-01,  1.43893191e-01,
#          -5.76039517e-04,  9.99999620e-01,  6.54513678e-04,  2.36400729e-03,
#          -8.61177638e-01, -1.63380433e-04, -5.08304090e-01, -1.46467979e-01]
  #  # 计算真实值
#  data: [ -0.5, 0.0,  0.8660254,  0.1,
#          0.0,  1.0,  0.0,  0.0,
#          -0.8660254, 0.0,  -0.5, -0.1732 ]


# 70
  # 计算真实值
#  data: [ -0.76604444, 0.0,  0.64278761,  0.06840403,
#          0.0,  1.0,  0.0,  0.0,
#          -0.64278761, 0.0,  -0.76604444, -0.1879385 ]

# 80
#  # 计算真实值
#  data: [ -0.93969262, 0.0,  0.34202014,  0.03473,
#          0.0,  1.0,  0.0,  0.0,
#          -0.34202014, 0.0,  -0.93969262, -0.19696 ]

# Lapping area between images (We must calculate) TODO 重叠区域计算，https://github.com/UZ-SLAMLab/ORB_SLAM3/issues/88
Camera.lappingBegin: 0
Camera.lappingEnd: 960 # 1000

Camera2.lappingBegin: 0
Camera2.lappingEnd: 960 #设置小了的话，发现运行会失败。可能需要好好标定一下？ 我操了，70度的情况，搞了半天，结果从900改回1000一下就好了

# Camera resolution
#Camera.width: 1920
#Camera.height: 1080
Camera.width: 960
Camera.height: 540

# Camera frames per second 
Camera.fps: 15.0 #20

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Image scale, it changes the image size to be processed (<1.0: reduce, >1.0: increase)
#Camera.imageScale: 0.7071 # 1/sqrt(2)

# Close/Far threshold. Baseline times.  #用于区分哪些特征点是近点，哪些是远点
ThDepth: 40.0 #  40 深度阈值，不是一个精确的数值，大概预估的，可以不改动，要改的话参考下述公式:
  #自己粗略估计一个相机可以良好显示的最大距离值为s = 10  如果fx = 100 Camera.bf = 20
  #那么 ThDepth = s*fx/Camera.bf = 10 *100 /20 = 50
  #将你自己的参数带入上述公式 可以得到大概的阈值。
  #双目关键点的深度如果小于ThDepth倍基线长度的值，就被叫做近关键点，否则就是远关键点。近关键点可以较好的被三角化，并提供尺度，平移，旋转信息。而远关键点可以提供比较好的旋转信息，但只能有比较差的尺度和平移信息，远点用多视角进行三角化。https://blog.csdn.net/catpico/article/details/120688795

# 基线距离（单位：米） * fx（单位：像素） 0.2*338
Camera.bf: 80.484 #840*0.2 570*0.2 136.8

thFarPoints: 20.0

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1800 # Tested with 1250   1000

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8 #8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 15 # 20  15 初始阶段的FAST特征点提取的阈值。（增大该值可能会导致更少的特征点被提取，而减小该值可能会导致更多的特征点被提取。）
ORBextractor.minThFAST: 5 # 7 用于跟踪阶段的FAST特征点提取的阈值

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -3.5
Viewer.ViewpointF: 500
